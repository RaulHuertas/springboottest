plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.protobuf' version '0.9.5'
}


group = 'com.rhuertas'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(25)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven {
        mavenCentral()
        url = 'https://repo.akka.io/SIDELKMGizSRKNO9REGiWdHhXWDXxiBqN0asIQtYRg8dsvU5/secure'
        mavenLocal()
    }

}

ext {
	set('springGrpcVersion', '0.11.0')
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'com.google.code.gson:gson:2.13.2'
	implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.20.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// Akka Actor Core
	implementation 'com.typesafe.akka:akka-actor-typed_2.13:2.10.9' // For Akka Typed
	// Or for classic actors:
	//implementation 'com.typesafe.akka:akka-actor_2.13:2.10.9'

	// Optional: Akka Stream
	implementation 'com.typesafe.akka:akka-stream_2.13:2.10.9'


	implementation 'io.grpc:grpc-services'

	implementation 'com.google.protobuf:protobuf-java:3.25.1'
	implementation "io.grpc:grpc-protobuf:1.76.0"
	implementation "io.grpc:grpc-stub:1.76.0"
}



dependencyManagement {
	imports {
		mavenBom "org.springframework.grpc:spring-grpc-dependencies:${springGrpcVersion}"
	}
}

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc:3.25.1'
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java'
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {
				option '@generated=omit'
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}


